@page
@model RegisterModel
@if (User.IsInRole(STVRole.Admin))
{
    ViewData["Title"] = " Admin";
}
else 
{
    ViewData["Title"] = "Register";
}

<style>
    .imgdiv {
        background-size:100%;
    }
    .imgregister {
        height:auto;
        max-width:100%;
    }
</style>
@*<h1>@ViewData["Title"]</h1>*@
<section class="py-5">
   
    <div class="container px-4 px-lg-5 mt-5">
        <h1>@ViewData["Title"]</h1>

        <div class="row">
            <div class="col-md-5">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            @*the fields in AppUser Model that i want add in the view after i add it in the InputModel in Register.cshtml.cs file (start)*@
            <div class="form-floating mb-3">
                <input asp-for="Input.Name" class="form-control" autocomplete="Name" aria-required="true" placeholder="Name" />
                <label asp-for="Input.Name">Name</label>
                <span asp-validation-for="Input.Name" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Address" class="form-control" autocomplete="Address" aria-required="true" placeholder="Address" />
                <label asp-for="Input.Address">Address</label>
                <span asp-validation-for="Input.Address" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.City" class="form-control" autocomplete="City" aria-required="true" placeholder="City" />
                <label asp-for="Input.City">City</label>
                <span asp-validation-for="Input.City" class="text-danger"></span>
            </div>
            @*the fields in AppUser Model that i want add in the view after i add it in the InputModel in Register.cshtml.cs file (end)
            -- after i finished here i must go to  OnPostAsync Method in Register.cshtml.cs file to add this fields 
            *@
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            @*
                i need to use this html page also with admin when need to create user from different roles 
                and the admin  have some Chraracteristics will display for him so i need to check the user that is logged in is admin or not to 
                display this things .
                * After i add these i will register it in the Register.cshtml.cs to make the role that the admin will select 
            *@

             @if (User.IsInRole(STVRole.Admin)) @*user is a class in mvc projects have many of methods for the users that are logged in *@
            {
            <div class="form-floating mb-3">
                <input type="radio" name="RoleRadio" value="@STVRole.Admin" />@STVRole.Admin   @*@@STVRole.Admin at the end of input type this to make not need to create label*@
                <input type="radio" name="RoleRadio" value="@STVRole.Customer" />@STVRole.Customer @*radio type to make the user select one input from list inputs*@
                <input type="radio" name="RoleRadio" value="@STVRole.Editor" />@STVRole.Editor
            </div>
            }

            @if(User.IsInRole(STVRole.Admin))
            {
                        <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Create New User</button>
            }
            else
            {
                        <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
            }
        </form>
    </div>
            <div class="col-md-5 col-md-offset-2">

                <div class="imgdiv">
                    <img class="imgregister" src="~/images/register.png" alt="RegisterImage" />
                </div>
        @* <section>
            <h2>Use another service to register.</h2>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section> *@
    </div>
        </div>
    </div>
</section>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
